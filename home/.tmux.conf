# .tmux.conf

set -g prefix C-a

## List of plugins
# For this to work you need to install https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# Fetch new plugins with prefix + `I` (capital `i`, as in "install")
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'

### Themes
set -g @plugin 'dracula/tmux'
# set -g @plugin 'lawabidingcactus/tmux-gruvbox-truecolor'

set -g @resurrect-capture-pane-contents 'on'
set -g @yank_with_mouse 'on'
set -g @yank_selection_mouse 'clipboard'
set -g @copy_mode_yank 'Enter'
set -g @dracula-show-weather false
set -g @dracula-show-powerline true

set -g bell-action none
set -g visual-bell off

# Watch for activity in background windows.
setw -g monitor-activity on
setw -g visual-activity off

# I always want mouse support.
set -g mouse on

# Status bar colors
set -g status-bg colour60
set -g status-fg brightwhite

# Make the active pane more visible
set -g pane-border-style bg=default,fg=colour245
set -g pane-active-border-style bg=default,fg=colour60

set -g window-style fg=colour251
set -g window-active-style fg=brightwhite

# Make the active window's name stand out
setw -g window-status-current-style bg=colour232,fg=colour60

# Use color to indicate activity in a background window
setw -g window-status-activity-style bg=colour57,fg=colour245

set -g default-terminal 'screen-256color-bce'
set -ga terminal-overrides ',*256col*:Tc'

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to Cmd-Opt-<h,j,k,l> in iTerm2.
# http://tangledhelix.com/blog/2012/04/28/iterm2-keymaps-for-tmux/
bind-key J resize-pane -D 2
bind-key K resize-pane -U 2
bind-key H resize-pane -L 2
bind-key L resize-pane -R 2

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1

# automatically renumber windows when one is closed
set-option -g renumber-windows on

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# vi-style controls for copy mode
# setw -g mode-keys vi

# Vim-style copy
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'safe-reattach-to-user-namespace pbcopy'
# bind -T copy-mode-vi Escape send-keys -X cancel
# unbind -T copy-mode-vi 'Enter'
# bind-key -T copy-mode-vi 'Enter' send-keys -X copy-pipe-and-cancel 'safe-reattach-to-user-namespace pbcopy'

# copy to clipboard when selected by mouse
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'safe-reattach-to-user-namespace pbcopy'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'
